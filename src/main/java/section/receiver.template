    @Subscribe
    public void receive(${event} ${event_lower}) {
        LogEngine.instance.write("+ ${section}.receive(" + ${event_lower}.toString() + ")");
        FlightRecorder.instance.insert("${section}", "receive(" + ${event_lower}.toString() + ")");

        try {
            for (int i = 0; i < Configuration.instance.numberOf${class_name}${section_unique}; i++) {
                Method ${method}Method = ${class_name_lower}PortList.get(i).getClass().getDeclaredMethod("${method}");
                LogEngine.instance.write("${method}Method = " + ${method}Method);

                ${method_return} ${result} = (${method_return}) ${method}Method.invoke(${class_name_lower}PortList.get(i));
                LogEngine.instance.write("${result} = " + ${result});

                PrimaryFlightDisplay.instance.${gui_config} = ${result};
                FlightRecorder.instance.insert("${section}", "${class_name} (${result}): " + ${result});

                LogEngine.instance.write("+");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        LogEngine.instance.write("PrimaryFlightDisplay (${gui_config}): " + PrimaryFlightDisplay.instance.${gui_config});
        FlightRecorder.instance.insert("PrimaryFlightDisplay", "${gui_config}: " + PrimaryFlightDisplay.instance.${gui_config});
    }

